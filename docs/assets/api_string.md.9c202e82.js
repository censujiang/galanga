import{_ as s,o as a,c as n,U as l}from"./chunks/framework.fd4dbc48.js";const h=JSON.parse('{"title":"String","description":"","frontmatter":{},"headers":[],"relativePath":"api/string.md","lastUpdated":1679217330000}'),o={name:"api/string.md"},e=l(`<h1 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-label="Permalink to &quot;String&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>山奈提供了一些字符串处理的函数，用于处理字符串。</p><h2 id="导入" tabindex="-1">导入 <a class="header-anchor" href="#导入" aria-label="Permalink to &quot;导入&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">checkNull</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">strLength</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">formatBytes</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">galanga</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><h3 id="判断字符串是否为空" tabindex="-1">判断字符串是否为空 <a class="header-anchor" href="#判断字符串是否为空" aria-label="Permalink to &quot;判断字符串是否为空&quot;">​</a></h3><p>判断字符串是否为空，如果字符串为空，则返回 <code>true</code>，否则返回 <code>false</code>。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">checkNull</span><span style="color:#A6ACCD;">(name)</span></span>
<span class="line"></span></code></pre></div><h3 id="获取字符串长度" tabindex="-1">获取字符串长度 <a class="header-anchor" href="#获取字符串长度" aria-label="Permalink to &quot;获取字符串长度&quot;">​</a></h3><p>获取字符串的长度，如果字符串为空，则返回 <code>0</code>。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">strLength</span><span style="color:#A6ACCD;">(name)</span></span>
<span class="line"></span></code></pre></div><h3 id="格式化字节" tabindex="-1">格式化字节 <a class="header-anchor" href="#格式化字节" aria-label="Permalink to &quot;格式化字节&quot;">​</a></h3><p>将字节格式化为 <code>B</code>、<code>KB</code>、<code>MB</code>、<code>GB</code>、<code>TB</code>、<code>PB</code>、<code>EB</code>、<code>ZB</code>、<code>YB</code>。</p><p>输入参数：</p><ul><li><p><code>bytes</code>：字节数</p></li><li><p>一个json对象（可选），有以下内容：</p><ul><li><p><code>decimals</code>：保留的小数位数，默认为1</p></li><li><p><code>from</code>：输入的字节单位，默认为B</p></li><li><p><code>to</code>：输出的字节单位</p></li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">decimals</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">B</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">KB</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">formatBytes</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">json)</span></span>
<span class="line"></span></code></pre></div>`,17),p=[e];function t(c,r,i,d,y,D){return a(),n("div",null,p)}const C=s(o,[["render",t]]);export{h as __pageData,C as default};
