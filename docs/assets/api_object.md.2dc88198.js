import{_ as a,o as s,c as e,U as l}from"./chunks/framework.fd4dbc48.js";const C=JSON.parse('{"title":"Object","description":"","frontmatter":{},"headers":[],"relativePath":"api/object.md","lastUpdated":1685129659000}'),o={name:"api/object.md"},t=l(`<h1 id="object" tabindex="-1">Object <a class="header-anchor" href="#object" aria-label="Permalink to &quot;Object&quot;">​</a></h1><p>山奈提供了一些有关对象的方法，这些方法可以帮助您更好地使用对象。</p><h2 id="updateobjectfromimport" tabindex="-1"><code>updateObjectFromImport</code> <a class="header-anchor" href="#updateobjectfromimport" aria-label="Permalink to &quot;\`updateObjectFromImport\`&quot;">​</a></h2><h3 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h3><p>将新的object中的值动态更新到原有的object中，并不影响原有object中的结构。</p><h3 id="导入" tabindex="-1">导入 <a class="header-anchor" href="#导入" aria-label="Permalink to &quot;导入&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">updateObjectFromImport</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">galanga</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>输入的参数如下：</p><ul><li><code>importObject</code>[object]: 新的object，用于更新原有的object</li><li><code>object</code>[object]: 原有的object</li></ul><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-6Mb0z" id="tab-TqWHVtc" checked="checked"><label for="tab-TqWHVtc">按需引入</label><input type="radio" name="group-6Mb0z" id="tab-R5Z2PdF"><label for="tab-R5Z2PdF">全局引入</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">object </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">updateObjectFromImport</span><span style="color:#A6ACCD;">(importObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> object)</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">object </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> galanga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">updateObjectFromImport</span><span style="color:#A6ACCD;">(importObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> object)</span></span>
<span class="line"></span></code></pre></div></div></div><details class="details custom-block"><summary>注意</summary><p>如果原有的object是响应式的，那么在将object作为参数传入函数后，要么会污染原有的object，要么会导致函数失去响应式。具体情况取决于您的使用场景和框架。</p><p>如果在这种场景下，您仍然想要使用这个函数，并不希望污染原有的object，那么您可以使用下面的方法：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-UCtdA" id="tab-1RgdiHH" checked="checked"><label for="tab-1RgdiHH">按需引入</label><input type="radio" name="group-UCtdA" id="tab-Fl-42sK"><label for="tab-Fl-42sK">全局引入</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> newObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> object</span></span>
<span class="line"><span style="color:#A6ACCD;">newObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">updateObjectFromImport</span><span style="color:#A6ACCD;">(importObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> newObject)</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> newObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> object</span></span>
<span class="line"><span style="color:#A6ACCD;">newObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> galanga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">updateObjectFromImport</span><span style="color:#A6ACCD;">(importObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> newObject)</span></span>
<span class="line"></span></code></pre></div></div></div></details><h2 id="shakeobject" tabindex="-1"><code>shakeObject</code> <a class="header-anchor" href="#shakeobject" aria-label="Permalink to &quot;\`shakeObject\`&quot;">​</a></h2><h3 id="介绍-1" tabindex="-1">介绍 <a class="header-anchor" href="#介绍-1" aria-label="Permalink to &quot;介绍&quot;">​</a></h3><p>通过一个数组，将对象中的某些属性保留，其余属性删除。（也叫做摇树）</p><h3 id="导入-1" tabindex="-1">导入 <a class="header-anchor" href="#导入-1" aria-label="Permalink to &quot;导入&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">shakeObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">galanga</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="使用-1" tabindex="-1">使用 <a class="header-anchor" href="#使用-1" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>输入的参数如下：</p><ul><li><p><code>object</code>[object]: 要摇树的对象</p></li><li><p><code>array</code>[array]: 要保留的属性名组成的数组</p></li></ul><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-513_8" id="tab-POg9Esn" checked="checked"><label for="tab-POg9Esn">按需引入</label><input type="radio" name="group-513_8" id="tab-BwlG_Zm"><label for="tab-BwlG_Zm">全局引入</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">object </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shakeObject</span><span style="color:#A6ACCD;">(object</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> array)</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">object </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> galanga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shakeObject</span><span style="color:#A6ACCD;">(object</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> array)</span></span>
<span class="line"></span></code></pre></div></div></div>`,21),n=[t];function p(c,r,i,d,b,y){return s(),e("div",null,n)}const A=a(o,[["render",p]]);export{C as __pageData,A as default};
